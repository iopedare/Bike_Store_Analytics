-- ----------------------------------------------------
-- Sales Analytics
-- ----------------------------------------------------


-- 1. Sales Performance Over Time
-- Total Sales Revenue by Day/Week/Month/Year
SELECT
    DATE_TRUNC('day', O.order_date) sales_day,
	SUM(OI.quantity * OI.list_price * (1 - OI.discount)) total_revenue
FROM sales.orders O
JOIN sales.order_items OI ON O.order_id = OI.order_ID
GROUP BY 1
ORDER BY 1;

-- Total Sales Revenue by Week
SELECT
    DATE_TRUNC('week', O.order_date) sales_week,
	SUM(OI.quantity * OI.list_price * (1 - OI.discount)) total_revenue
FROM sales.orders O
JOIN sales.order_items OI ON O.order_id = OI.order_ID
GROUP BY 1
ORDER BY 1;

-- Total Sales Revenue by Month
SELECT
    DATE_TRUNC('month', O.order_date) sales_month,
	SUM(OI.quantity * OI.list_price * (1 - OI.discount)) total_revenue
FROM sales.orders O
JOIN sales.order_items OI ON O.order_id = OI.order_ID
GROUP BY 1
ORDER BY 1;

-- Total Sales Revenue by Year
SELECT
    DATE_TRUNC('year', O.order_date) sales_year,
	SUM(OI.quantity * OI.list_price * (1 - OI.discount)) total_revenue
FROM sales.orders O
JOIN sales.order_items OI ON O.order_id = OI.order_ID
GROUP BY 1
ORDER BY 1;

-- Number of Orders Over Time - Month
SELECT 
	DATE_TRUNC('month', O.order_date) order_month,
	COUNT(O.order_id) total_order
FROM sales.orders O
GROUP BY 1
ORDER BY 1;

-- Number of Orders Over Time - Year
SELECT 
	DATE_TRUNC('year', O.order_date) order_year,
	COUNT(O.order_id) total_order
FROM sales.orders O
GROUP BY 1
ORDER BY 1;


-- 2. Top Customers
-- Customers by Total Spending
SELECT 
	C.customer_id, C.first_name, C.last_name,
	ROUND(SUM(OI.quantity * OI.list_price * (1 - OI.discount)), 2) total_spending
FROM sales.orders O
JOIN sales.customers C ON O.customer_id = C.customer_id
JOIN sales.order_items OI ON O.order_id = OI.order_id
GROUP BY 1
ORDER BY 4 DESC
LIMIT 10;

-- Customers by Number of Orders
SELECT 
	C.customer_id, C.first_name, C.last_name,
	COUNT(O.order_id) no_of_orders
FROM sales.customers C
JOIN sales.orders O ON C.customer_id = O.customer_id
GROUP BY 1,2,3
ORDER BY no_of_orders DESC
LIMIT 10;


-- 3. Order Fulfillment and Efficiency
-- Average Time to Ship an Order
SELECT 
	AVG(O.shipped_date - O.order_date) average_shipping_days
FROM sales.orders O
WHERE O.shipped_date IS NOT NULL

-- Orders by Status
SELECT 
	COUNT(O.order_id) num_of_orders,
	CASE WHEN O.order_status = 1 THEN 'Pending'
		 WHEN O.order_status = 2 THEN 'Processing'
		 WHEN O.order_status = 3 THEN 'Rejection'
		 WHEN O.order_status = 4 THEN 'Completed'
		END AS order_status
FROM sales.orders O
GROUP BY O.order_status;

-- 4. Geographic Sales Analysis
--Sales Revenue by State (Customers)
SELECT 
	C.state, SUM(OI.quantity * OI.list_price * (1 - OI.discount)) total_revenue
FROM sales.customers C
JOIN sales.orders O ON C.customer_id = O.customer_id
JOIN sales.order_items OI ON O.order_id = OI.order_id
GROUP BY C.state
ORDER BY total_revenue DESC;

--Sales Revenue by City (Customers)
SELECT 
	C.city, C.state, SUM(OI.quantity * OI.list_price * (1 - OI.discount)) total_revenue
FROM sales.customers C
JOIN sales.orders O ON C.customer_id = O.customer_id
JOIN sales.order_items OI ON O.order_id = OI.order_id
GROUP BY C.city, c.state
ORDER BY total_revenue DESC;

-- Sales Volume by Store Location
SELECT 
	S.store_name, COUNT(O.order_id) total_order,
	SUM(OI.quantity * OI.list_price * (1 - OI.discount)) total_revenue
FROM sales.stores S
JOIN sales.orders O ON S.store_id = O.store_id
JOIN sales.order_items OI ON O.order_id = OI.order_id
GROUP BY S.store_name
ORDER BY total_revenue DESC;


-- 5. Staff Performance
-- Sales Revenue Generated by Staff
SELECT 
	ST.staff_id, ST.first_name, ST.last_name,
	ROUND(SUM(OI.quantity * OI.list_price * (1 - OI.discount)), 2) total_revenue
FROM sales.staffs ST
JOIN sales.orders O ON ST.staff_id = O.staff_id
JOIN sales.order_items OI ON O.order_id = OI.order_id
GROUP BY ST.staff_id
ORDER BY total_revenue DESC;


-- Number of Orders Handled by Staff
SELECT 
	ST.staff_id, ST.first_name, ST.last_name,
	COUNT(O.order_id) total_order
FROM sales.staffs ST
JOIN sales.orders O ON ST.staff_id = O.staff_id
GROUP BY ST.staff_id
ORDER BY total_order DESC;
